on:
  push:
    branches:
      - "**"
      - "!main"

jobs:
  datasets_gen_killed:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - uses: oven-sh/setup-bun@v1
        name: setup bun
        with:
          bun-version: 1.0.22

      - name: install python dependencies
        run: pip install -r scripts/data/common/killed-in-gaza/requirements.txt

      - name: install dependencies
        run: bun install

      - name: run scripts & diff
        run: |
          python scripts/data/common/killed-in-gaza/generate_killed_list.py
          mkdir -p ci-tmp
          bun run gen-killed
          git diff killed-in-gaza.json > ci-tmp/killed-in-gaza-json.diff

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: killed-in-gaza-zip
          path: ci-tmp/*

      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        name: commit changes
        id: commit
        with:
          message: "daily: update for ${{ steps.commitvars.outputs.currentdate }}"
          add: '["killed-in-gaza.json", "killed-in-gaza.min.json"]'
          push: true

      - uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: PR
        with:
          # Authetication token to access GitHub APIs. (Can be omitted by default.)
          github-token: ${{ github.token }}
          # Verbose setting SHA when using Pull_Request event trigger to fix #16. (For push even trigger this is not necessary.)
          sha: ${{ github.event.pull_request.head.sha }}
          # Only return if PR is still open. (By default it returns PRs in any state.)
          filterOutClosed: true
          # Only return if PR is not in draft state. (By default it returns PRs in any state.)
          filterOutDraft: true

      - name: build report
        id: report
        run: |
          # if our log output has lines there's issues worth noting
          if [[ $(wc -l <ci-tmp/killed-in-gaza-log.txt) -ge 2 ]]; then
            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "scriptlog<<$EOF" >> $GITHUB_OUTPUT
            cat ci-tmp/killed-in-gaza-log.txt >> "$GITHUB_OUTPUT"
            echo "$EOF" >> $GITHUB_OUTPUT
          fi

      - uses: actions/github-script@v7
        if: steps.PR.outputs.pr_found == 'true'
        name: add pr comment
        env:
          COMMITTED: ${{ steps.commit.outputs.committed }}
          SCRIPTLOG: ${{ steps.report.outputs.scriptlog }}
          PRNUM: ${{ steps.PR.outputs.number }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: process.env.PRNUM,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${process.env.COMMITTED === 'true' ? 'Added a commit to this PR with the updated JSON, please review it (if there are many changes, the diff will be in build artifacts)' : 'No JSON change committed.'}${process.env.SCRIPTLOG ? '\n\n': ''}${process.env.SCRIPTLOG}\n\nhttps://github.com/TechForPalestine/palestine-datasets/actions/runs/${context.runId}`
            })
